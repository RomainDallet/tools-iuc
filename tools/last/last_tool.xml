<tool id="last_tool" name="LAST" version="@LAST_CONDA_VERSION@+galaxy0" python_template_version="3.5">

    <description>finds similar regions between sequences.</description>

    <macros>
        <import>macros_last.xml</import>
    </macros>

    <requirements>
        <requirement type="package" version="@LAST_CONDA_VERSION@">last</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        lastdb
        -Q $lastdb.input_format
        $lastdb.sequences_type.protein
        -a $lastdb.sequences_type.symbols
        -R $lastdb.repeats.uppercase$lastdb.repeats.simple_repeat
        $lastdb.repeats.sm_lower
        -S $lastdb.lastdb_advanced.strand
        -u $lastdb.lastdb_advanced.seeds.seeding_scheme
        -w $lastdb.lastdb_advanced.seeds.step
        -W $lastdb.lastdb_advanced.seeds.size
        -m $lastdb.lastdb_advanced.seeds.pattern
        -i $lastdb.lastdb_advanced.matches
        -C $lastdb.lastdb_advanced.child_table
        ref_files
        '$ref_fasta'

        &&

        lastal
        -f $lastal.output_format
        -D $lastal.evalue_opt.query_letters
        -r $lastal.score_opt.match_score
        $lastal.misc_opt.misc_strand
        $lastal.misc_opt.ouput_type
        $lastal.misc_opt.misc_input_format
        ref_files
        '$int_fasta'
        $lastal.last_split
        > '$result'
    ]]></command>
    <!--        
        -s \$GALAXY_MEMORY_MB
        -P \${GALAXY_SLOTS:-1}
    -->
    <inputs>
        <param name="ref_fasta" type="data" format="fasta" label="Reference sequence fasta file" />
        <param name="int_fasta" type="data" format="fasta" label="Sequence of interest fasta file" />
        <section name="lastdb" title="Lastdb arguments" expanded="true">
            <param name="input_format" argument="-Q" type="select" multiple="false" label="Input format">
                <option value="0" selected="true">fasta or fastq-ignore</option>
                <option value="1">fastq-sanger</option>
                <option value="2">fastq-solexa</option>
                <option value="3">fastq-illumina</option>
            </param>

            <conditional name="sequences_type">
                <param name="protein" type="select" multiple="false" label="The sequences are :">
                    <option value="" selected="true">DNA</option>
                    <option value="-p">Proteins (-p)</option>
                </param>
                <when value="">
                    <param name="symbols" argument="-a" type="text" value="ACGT" label="User-defined alphabet."/>
                </when>
                <when value="-p">
                    <param name="symbols" argument="-a" type="text" value="ACDEFGHIKLMNPQRSTVWY" label="User-defined alphabet."/>
                </when>
            </conditional>

            <section name="repeats" title="Specify lowercase-marking of repeats. (-R)" expanded="false">
                <param name="uppercase" type="select" multiple="false" label="Convert the input sequences to uppercase while reading them.">
                    <option value="0">Convert the input sequences to uppercase while reading them. (0)</option>
                    <option value="1" selected="true">Keep any lowercase in the input sequences. (1)</option>
                </param>
                <param name="simple_repeat" type="select" multiple="false" label="Check for simple repeats.">
                    <option value="0" selected="true">Do not check for simple repeats.(0)</option>
                    <option value="1">Convert simple repeats to lowercase.(1)</option>
                    <option value="2">Convert simple DNA repeats to lowercase.(2)</option>
                </param>
                <param name="sm_lower" argument="-c" type="boolean" truevalue="-c" falsevalue="" checked="true" label="Soft-mask lowercase letters." help="This means that, when we compare these sequences to some other sequences using lastal, lowercase letters will be excluded from initial matches. This will apply to lowercase letters in both sets of sequences."/>
            </section>

            <section name="lastdb_advanced" title="Advanced options" expanded="false">
                <param name="strand" argument="-S" type="select" multiple="false" label="Strand">
                    <option value="0">Reverse</option>
                    <option value="1" selected="true">Forward</option>
                    <option value="2">Both</option>
                </param>

                <conditional name="seeds">
                    <param name="seeding_scheme" argument="-u" type="select" multiple="false" label="Specify a seeding scheme.">
                        <option value="BISF">BISF</option>
                        <option value="BISR">BISR</option>
                        <option value="MAM4">MAM4</option>
                        <option value="MAM8">MAM8</option>
                        <option value="MURPHY10">MURPHY10</option>
                        <option value="NEAR">NEAR</option>
                        <option value="YASS" selected="true">YASS</option>
                        <!-- Add filename option avec <repeat> -->
                    </param>
                    <when value="BISF">
                        <expand macro="step_macro" step="2"/>
                        <!-- It sets this lastal default: -pBISF -->
                    </when>
                    <when value="BISR">
                        <expand macro="step_macro" step="2"/>
                        <!-- It sets this lastal default: -pBISR -->
                    </when>
                    <when value="MAM4">
                        <expand macro="step_macro" step="1"/>
                    </when>
                    <when value="MAM8">
                        <expand macro="step_macro" step="1"/>
                    </when>
                    <when value="MURPHY10">
                        <expand macro="step_macro" step="1"/>
                        <!-- It set lastdb default -p -->
                    </when>
                    <when value="NEAR">
                        <expand macro="step_macro" step="1"/>
                        <!-- It sets this lastal default: -r6 -q18 -a21 -b9 -->
                    </when>
                    <when value="YASS">
                        <expand macro="step_macro" step="1"/>
                    </when>
                </conditional>

                <!-- Condition pour lastal -->
                <param name="matches" argument="-i" type="integer" value="0" label="Minimum limit on initial matches per query position"/>

                <param name="child_table" argument="-C" type="select" multiple="false" label="Child table type">
                    <option value="0" selected="true">None</option>
                    <option value="1">Byte-size</option>
                    <option value="2">Short-syze</option>
                    <option value="3">Full</option>
                </param>
                <!--
                <param name="count" argument="-x" type="boolean" truevalue="-x" falsevalue="" checked="true" label="Just count sequences and letters."/>                    
                <param name="bucket_depth" type="" label="Bucket depth (-b)"/>
                -->
            </section>
        </section>

        <section name="lastal" title="Lastal arguments" expanded="true">
            <param name="output_format" argument="-f" type="select" multiple="false" label="Output format (-f)">
                <option value="MAF" selected="true">MAF</option>
                <option value="TAB">TAB</option>
                <option value="BlastTab">BlastTab</option>
                <option value="BlastTab+">BlastTab+</option>
            </param>

            <section name="evalue_opt" title="E-value options" expanded="false">
                <param name="query_letters" type="integer" value="1000000" label="Query letters per random alignment (-D)"/>
                <!--<param name="max_eg2" type="integer" value="1e+18" label="Maximum expected alignments per square giga (-E)"/>-->
            </section>

            <section name="score_opt" title="Score options" expanded="false">
                <param name="match_score" argument="-r" type="integer" value="1" label="Match score"/>
                <param name="mismatch_cost" type="integer" value="1" label="Mismatch cost (-q)"/>
                <param name="score_matrix" type="select" multiple="false" label="Match/mismatch score matrix (-p)">
                    <!-- Prend la valeur de lastdb scheme -->
                    <option value="-pPAM30" selected="true">PAM30</option>
                    <option value="-pBL62">BL62</option>
                    <option value="-pBL80">BL80</option>
                </param>
                <!-- Conditionnel  -->
                <param name="frameshift_cost" type="integer" value="15" label="Frameshift cost (-F)"/>
            </section>

            <section name="init_match_opt" title="Initial-match options" expanded="false">
                <param name="multiplicity" type="integer" value="10" label="Maximum initial matches per query position (-m)"/>
                <param name="min_length" type="integer" value="1" label="Minimum length for initial matches (-l)"/>
                <param name="max_length" type="integer" value="999999999" label="Maximum length for initial matches (-L)"/>
                <param name="init_step" type="integer" value="1" label="Use initial matches starting at every k-th position in each query (-k)"/>
                <param name="init_size" type="integer" value="1" label="Use minimum positions in sliding windows of W consecutive positions (-W)"/> <!-- $lastdb.lastdb_advanced.size -->
            </section>

            <section name="misc_opt" title="Miscellaneous options" expanded="false">
                <param name="misc_strand" type="select" multiple="false" label="Strand (-s)">
                    <option value="-s0">Reverse</option>
                    <option value="-s1">Forward</option>
                    <option value="-s2" selected="true">Both</option> 
                    <!-- 2 for DNA, 1 for protein -->
                </param>
                <param name="ouput_type" type="select" multiple="false" label="Output type (-j)">
                    <option value="-j0">Match counts</option>
                    <option value="-j1">Gapless</option>
                    <option value="-j2">Redundant gapped</option>
                    <option value="-j3" selected="true">Gapped</option>
                    <option value="-j4">Column ambiguity estimates</option>
                    <option value="-j5">Gamma-centroid</option>
                    <option value="-j6">LAMA</option>
                    <option value="-j7">Expected counts</option>
                </param>
                <param name="misc_input_format" type="select" multiple="false" label="Input format (-Q)">
                    <option value="-Q0" selected="true">fasta or fastq-ignore</option>
                    <option value="-Q1">fastq-sanger</option>
                    <option value="-Q2">fastq-solexa</option>
                    <option value="-Q3">fastq-illumina</option>
                    <option value="-Q4">prb</option>
                    <option value="-Q5">PSSM</option>
                </param>
            </section>

            <param name="last_split" type="boolean" truevalue="| last-split" falsevalue="" checked="false" label="Looks for a unique best alignment for each part of each query." help="It allows different parts of one query to match different parts of the genome, which may happen due to rearrangements."/>
        </section>
    </inputs>

    <outputs>
        <data name="result" format="maf" />
    </outputs>

    <tests>
        <test>
            <param name="ref_fasta" value="humanMito.fa" />
            <param name="int_fasta" value="fuguMito.fa" />
            <param name="args_db" value="-cR01" />
            <output name="result" file="humanMito-fuguMito.maf" />
        </test>
    </tests>
    
    <help><![CDATA[
        LAST finds similar regions between sequences.

        The main technical innovation is that LAST finds initial matches based on their multiplicity, instead of using a fixed length (e.g. BLAST uses 11-mers). To find these variable-length matches, it uses a suffix array (inspired by Vmatch). To achieve high sensitivity, it uses a spaced suffix array (or subset suffix array), analogous to spaced seeds (or subset seeds).

        LAST can:
            - Handle big sequence data, e.g:
                - Compare two vertebrate genomes.
                - Align billions of DNA reads to a genome.
            - Indicate the reliability of each aligned column.
            - Use sequence quality data properly.
            - Compare DNA to proteins, with frameshifts.
            - Compare PSSMs to sequences.
            - Calculate the likelihood of chance similarities between random sequences.
            - Do split and spliced alignment.
            - Train alignment parameters for unusual kinds of sequence (e.g. nanopore).

    ]]></help>
    <citations></citations>
</tool>